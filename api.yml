components:
  parameters:
    accountId:
      in: path
      name: accountId
      required: true
      schema:
        type: string
  schemas:
    address:
      description: Address.
      title: Address
      type: object
      properties:
        line1:
          title: Line 1
          type: string
        line2:
          default: ''
          title: Line 2
          type: string
        city:
          title: City
          type: string
        state:
          description: 'State code, e.g. AK'
          title: State
          type: string
        country:
          description: 'Country code, e.g. US'
          title: Country
          type: string
        postalCode:
          default: ''
          description: Postal code (ZIP code).
          title: Postal code
          type: string
      required:
        - line1
        - city
        - state
        - country
    coverageLevel:
      description: Coverage level.
      enum:
        - family
        - individual
      title: Coverage level
      type: string
    estimate:
      additionalProperties: false
      description: Estimation result.
      properties:
        treatments:
          items:
            additionalProperties: false
            properties:
              amounts:
                $ref: '#/components/schemas/estimateAmounts'
              payers:
                items:
                  type: object
                  properties:
                    type:
                      insurancePolicyId:
                        type: string
                      amounts:
                        $ref: '#/components/schemas/estimateAmounts'
                type: array
              procedures:
                items:
                  description: Estimate procedure details.
                  properties:
                    allowed:
                      description: Allowed amount.
                  title: Estimate procedure
                  type: object
                type: array
            required:
              - patient
              - payers
            type: object
          type: array
        total:
          $ref: '#/components/schemas/estimateAmounts'
      title: Estimate
      type: object
    estimateAmounts:
      additionalProperties: false
      properties:
        patient:
          additionalProperties: false
          properties:
            amount:
              description: Amount paid by the patient
              title: Amount
              type: string
          type: object
        insurance:
          items:
            additionalProperties: false
            properties:
              deductibles:
                description: Deductibles.
                items:
                  additionalProperties: false
                  properties:
                    benefit:
                      additionalProperties: false
                      properties:
                        comment:
                          default: ''
                          type: string
                        coverageLevel:
                          $ref: '#/components/schemas/coverageLevel'
                          default: null
                          nullable: true
                        placeOfService:
                          default: null
                          nullable: true
                          type: string
                        remaining:
                          type: string
                        serviceType:
                          default: null
                          nullable: true
                          type: string
                        total:
                          default: null
                          description: Total deductible
                          nullable: true
                          title: Total
                          type: string
                      required:
                        - remaining
                      type: object
                    remaining:
                      description: Estimated final remaining.
                      type: string
                  required:
                    - benefit
                    - remaining
                  type: object
                title: Deductibles
                type: array
              outOfPocketMaxes:
                description: Out of pocket maximums.
                items:
                  additionalProperties: false
                  properties:
                    benefit:
                      additionalProperties: false
                      properties:
                        comment:
                          default: ''
                          type: string
                        coverageLevel:
                          $ref: '#/components/schemas/coverageLevel'
                          default: null
                          nullable: true
                        placeOfService:
                          default: null
                          nullable: true
                          type: string
                        remaining:
                          type: string
                        serviceType:
                          default: null
                          nullable: true
                          type: string
                        total:
                          default: null
                          description: Total out of pocket max.
                          nullable: true
                          title: Total
                          type: string
                      required:
                        - remaining
                      type: object
                    remaining:
                      description: Estimated final remaining.
                      type: string
                  required:
                    - benefit
                    - remaining
                  type: object
                title: Out of pocket maximums
                type: array
              copays:
                description: Copays.
                items:
                  additionalProperties: false
                  description: Estimate copay details.
                  properties:
                    benefit:
                      additionalProperties: false
                      properties:
                        amount:
                          type: string
                        comment:
                          default: ''
                          type: string
                        coverageLevel:
                          $ref: '#/components/schemas/coverageLevel'
                          default: null
                          nullable: true
                        placeOfService:
                          default: null
                          nullable: true
                          type: string
                        serviceType:
                          default: null
                          nullable: true
                          type: string
                      required:
                        - amount
                  title: Estimate copay
                title: Copays
                type: array
              insurancePolicyId:
                type: string
              patientPayment:
                description: Patient payment.
                properties:
                  coinsurance:
                    description: Patient payment of coinsurance.
                    title: Coinsurance
                    type: string
                  copay:
                    description: Patient payment of copay.
                    title: Copay
                    type: string
                  deductible:
                    description: Patient payment of deductible.
                    title: Deductible
                    type: string
                title: Patient
              notCovered:
                description: Amount not covered by the payer.
                title: Not covered
                type: string
              payment:
                description: Payer payment.
                title: Payment
                type: string
          type: array
    estimation:
      description: Estimation.
      title: Estimation
      type: object
      properties:
        patientId:
          description: ID of patient.
          title: Patient ID
          type: string
        treatments:
          description: Treatments.
          title: Treatment
          type: array
          items:
            $ref: '#/components/schemas/estimationTreatment'
      required:
        - patientId
        - treatments
    estimationProcedure:
      description: Estimation procedure.
      properties:
        code:
          description: CPT/HCPC code of procedure
          title: Code
          type: string
        modifiers:
          description: Modifier codes
          default: []
          title: Modifiers
          type: array
          items:
            type: string
        quantity:
          description: Number of units
          format: int32
          title: Quantity
          type: integer
      required:
        - code
        - quantity
      title: Estimation procedure
      type: object
    estimationTreatment:
      additionalProperties: false
      description: Estimation treatment.
      type: object
      properties:
        insurancePolicies:
          type: array
          items:
            properties:
              benefits:
                default:
                  coinsurance: null
                  copay: null
                  deductible: null
                  outOfPocketMax: null
                coinsurance:
                  default: null
                  nullable: true
                  additionalProperties: false
                  properties:
                    proportion:
                      type: string
                    comment:
                      default: ''
                      type: string
                    coverageLevel:
                      $ref: '#/components/schemas/coverageLevel'
                      default: null
                      nullable: true
                    placeOfService:
                      default: null
                      nullable: true
                      type: string
                    serviceType:
                      default: null
                      nullable: true
                      type: string
                  required:
                    - proportion
                copay:
                  $ref: '#/paths/~1accounts~1%7BaccountId%7D~1estimation~1%7BestimationId%7D~1estimate/get/responses/200/content/application~1json/schema/properties/total/properties/insurance/items/properties/copays/items/properties/benefit'
                  default: null
                  nullable: true
                deductible:
                  $ref: '#/paths/~1accounts~1%7BaccountId%7D~1estimation~1%7BestimationId%7D~1estimate/get/responses/200/content/application~1json/schema/properties/total/properties/insurance/items/properties/deductibles/items/properties/benefit'
                  default: null
                  nullable: true
                outOfPocketMax:
                  $ref: '#/paths/~1accounts~1%7BaccountId%7D~1estimation~1%7BestimationId%7D~1estimate/get/responses/200/content/application~1json/schema/properties/total/properties/insurance/items/properties/outOfPocketMaxes/items/properties/benefit'
                  default: null
                  nullable: true
              eligibility:
                default: null
                nullable: true
                properties:
                  inquiryX12:
                    description: X12 eligibility inquiry (270)
                    title: Inquiry X12
                    type: string
                  responseX12:
                    description: X12 eligibility response (271)
                    title: Response 12
                    type: string
                required:
                  - inquiryX12
                  - responseX12
              policy:
                $ref: '#/components/schemas/insurancePolicy'
                title: Policy
            required:
              - policy
            title: Estimation insurance
            type: object
        procedures:
          type: array
          items:
            $ref: '#/components/schemas/estimationProcedure'
        serviceDate:
          description: Date of service
          type: string
          format: date
        serviceLocationId:
          description: ID of service location
          title: Service location ID
          type: string
      required:
        - insurancePolicies
        - procedures
        - serviceDate
        - serviceLocationId
    patient:
      description: Patient.
      properties:
        name:
          $ref: '#/components/schemas/personName'
        address:
          $ref: '#/components/schemas/address'
        ref:
          description: External reference
          title: Reference
          type: string
      title: Person
      type: object
    insurancePlan:
      description: Insurance plan.
      properties:
        ref:
          description: External reference.
          title: Reference
          type: string
        name:
          description: Name of insurance plan.
          title: Name
          type: string
      requried:
        - name
        - ref
      title: Insurance plan
    insurancePlanItem:
      description: Insurance plan list item.
      properties:
        id:
          description: ID of insurance plan.
          title: ID
          type: string
        name:
          description: Name of insurance plan.
          title: Name
          type: string
      required:
        - id
        - name
      title: Insurance plan item
      type: object
    insurancePolicy:
      description: Insurance policy.
      properties:
        insurancePlanId:
          description: ID of insurance plan
          title: Insurance plan ID
          type: string
        memberId:
          description: Insurance-provided member ID.
          title: Member ID
          type: string
        patientId:
          description: Patient ID.
          title: Patient ID
          type: string
        subscriber:
          default: null
          description: Insurance subscriber. Null if the patient is the subscriber.
          properties:
            birthdate:
              description: Subscriber birthdate
              format: date
              title: Birthdate
              type: string
            name:
              $ref: '#/components/schemas/personName'
              description: Name of subscriber
              title: Name
            relationship:
              description: Relationship of subscriber to patient
              enum:
                - child
                - domestic_partner
                - other
                - parent
                - spouse
                - unknown
          required:
            - birthdate
            - name
            - relationship
          title: Subscriber
          type: object
      required:
        - insurancePlanId
        - memberId
        - patientId
      title: Insurance policy
      type: object
    personName:
      description: Person name
      properties:
        first:
          description: First name.
          maxLength: 100
          title: First
          type: string
        last:
          description: Last name.
          maxLength: 100
          title: Last
          type: string
        middle:
          default: ''
          description: Middle name.
          maxLength: 100
          title: Middle
          type: string
        suffix:
          default: ''
          description: Suffix.
          maxLength: 20
          title: Suffix
          type: string
      required:
        - first
        - last
      title: Person name
      type: object
    provider:
      additionalProperties: false
      description: Provider
      properties:
        address:
          $ref: '#/components/schemas/address'
        organizationName:
          default: null
          description: 'Name, if organization.'
          maxLength: 200
          nullable: true
          title: Organization name
          type: string
        personName:
          $ref: '#/components/schemas/personName'
          default: null
          description: 'Name, if person.'
          nullable: true
          title: Person name
        taxonomies:
          default: []
          description: Taxonomies
          type: array
          items:
            type: string
        npi:
          description: National Provider Identifier
          title: NPI
          type: string
        type:
          enum:
            - organization
            - person
          title: Type
      required:
        - address
        - npi
        - type
      title: Provider
      type: object
    serviceLocation:
      description: Service location.
      properties:
        address:
          $ref: '#/components/schemas/address'
        name:
          description: Name of service location
          maxLength: 200
          title: Name
          type: string
        placeOfService:
          description: 'Place of service code. See https://www.cms.gov/Medicare/Coding/place-of-service-codes/Place_of_Service_Code_Set'
          title: Place of service
          type: string
      required:
        - address
        - name
        - placeOfService
      title: Service location
      type: object
    serviceLocationItem:
      description: Service location.
      properties:
        id:
          type: string
        value:
          $ref: '#/components/schemas/serviceLocation'
  securitySchemes:
    rivet_auth:
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          scopes:
            read: read
            write: write
          tokenUrl: /oauth/token
      type: oauth2
openapi: 3.0.3
info:
  contact:
    email: ops@rivethealth.com
    name: 'Rivet Health, Inc.'
    url: 'https://rivethealth.com'
  description: |
    # Overview
    The Rivet API provides access programmatic access to Rivet features.

    This documentation is maintained in [https://github.com/rivethealth/rivet-api](https://github.com/rivethealth/rivet-api)

    See the detailed documentation on endpoints listed in the sidebar.

    # Authorization

    ## API

    Rivet uses OAuth2 ([RFC 6749](https://datatracker.ietf.org/doc/html/rfc6749))
    for users to grant access to apps.

    ### 1. Authorization URL

    Direct the user to the authorization URL. If the optional `state`
    parameter is given, it will be included in the later redirect.

    ```
    https://api.rivethealth.com/oauth/authorize
      ?client_id=<client_id>
      &redirect_uri=<redirect_url>
      &response_type=code
      &scope=write
      &state=<state>
    ```

    ### 2. Redirect
    After approving the request, the user is directed to the redirect URL, along
    the code and account ID. When the access token is later retrieved, it will
    be scoped to that account ID.

    ```
    <redirect_url>?account_id=<account_id>&code=<code>&state=<state>
    ```

    ### 3. Retrieve access token

    Use the code to retrieve the access token via HTTPS. Use basic
    authentication, with client ID as the username, and client secret as the
    password.

    ```
    POST /oauth/token
    Authorization: Basic <auth>
    Content-Type: application/x-www-form-urlencoded
    Host: api.rivethealth.com

    code=<code>&grant_type=authorization_code
    ```

    The server responds with the token.

    ```json
    200 OK
    Cache-Control: no-store
    Content-Type: application/json
    Pragma: no-cache

    {
      "access_token": "<access_token>",
      "type":"bearer"
    }
    ```

    The access token does not expire, but can be revoked. To test the token, you can use the`/auth` endpoint.

    ### 4. Use

    Include the token on authenticated requests.

    ```
    GET /example
    Authorization: Bearer <access_token>
    ```

    ### Misc

    Tokens can also be created manually in UI.

    ## Web UI

    Rivet allows web browser access via username/password, or by configuring a SAML identity provider. (TODO: fill in details)

    # API paradigms

    ## ref

    Most resources have an optional external reference `ref` property that can be used to identify the resource in
    another system.

    This identifier must be unique across the Rivet account.

    When creating new objects, if `ref` is the same as an existing object, the existing object is updated.


    # Web UI

    In addition the REST API, Rivet supports embedding Web UI.

    ## Estimates

    First, create an estimate using the REST API. It can be created as finalized or in draft mode.

    To embeded an estimate, use the following URL in an iframe or new window.

    `https://www.rivethealth.com/accountId/{accountId}/estimations/{estimationId}/embed`

    When the estimate is saved, it uses `postMessage('estimationSaved')` to notify the parent window.
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  termsOfService: 'https://www.rivethealth.com/terms'
  title: Rivet API
  version: 0.0.0
servers:
  - description: Production
    url: 'https://api.rivethealth.com/v1'
    variables: {}
paths:
  '/accounts/{accountId}/business-units':
    parameters:
      - $ref: '#/components/parameters/accountId'
      - description: External reference
        in: query
        name: ref
        schema:
          type: string
    get:
      operationId: list-business-units
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Business unit.
                properties:
                  id:
                    description: ID.
                    title: ID
                    type: string
                  value:
                    $ref: '#/paths/~1accounts~1%7BaccountId%7D~1business-units~1%7BbusinessUnitId%7D/get/responses/200/content/application~1json/schema'
                title: Business unit item
                type: object
          description: Success.
      summary: List business units
      tags:
        - Practice
    post:
      operationId: create-business-unit
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/paths/~1accounts~1%7BaccountId%7D~1business-units/get/responses/200/content/application~1json/schema'
          description: Updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/paths/~1accounts~1%7BaccountId%7D~1business-units/get/responses/200/content/application~1json/schema'
          description: Created.
      summary: Create business unit
      tags:
        - Practice
  '/accounts/{accountId}/business-units/{businessUnitId}':
    parameters:
      - $ref: '#/components/parameters/accountId'
      - description: Business unit ID
        in: path
        name: businessUnitId
        schema:
          type: string
    get:
      operationId: get-business-unit
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Business unit.
                properties:
                  address:
                    $ref: '#/components/schemas/address'
                  ref:
                    description: External reference.
                    maxLength: 100
                    nullable: true
                    tile: Reference
                    type: string
                  tin:
                    description: Taxpayer identification number.
                    title: TIN
                    maxLength: 9
                    minLength: 9
                    pattern: '[0-9]{9}'
                    type: string
                  name:
                    description: Name of business unit.
                    maxLength: 200
                    title: Name
                    type: string
                title: Business unit
                type: object
      summary: Get business unit
      tags:
        - Practice
  '/accounts/{accountId}/estimations':
    parameters:
      - $ref: '#/components/parameters/accountId'
    post:
      tags:
        - Estimates
      summary: Create estimation
      operationId: createEstimation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/estimation'
      responses:
        '201':
          description: Created
        '405':
          description: Invalid input
      security:
        - rivet_auth:
            - read
            - write
  '/accounts/{accountId}/estimation/{estimationId}':
    parameters:
      - $ref: '#/components/parameters/accountId'
      - name: estimationId
        in: path
        description: ID of estimation
        required: true
        schema:
          type: string
    get:
      tags:
        - Estimates
      description: Get an estimation.
      operationId: getEstimation
      summary: Get estimation
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/estimation'
        '400':
          description: Invalid ID supplied
        '404':
          description: Estimation does not exist
    security:
      - rivet_auth:
          - read
  '/accounts/{accountId}/estimation': {}
  '/accounts/{accountId}/estimation/{estimationId}/doc': {}
  '/accounts/{accountId}/estimation/{estimationId}/estimate':
    parameters:
      - $ref: '#/components/parameters/accountId'
      - $ref: '#/paths/~1accounts~1%7BaccountId%7D~1estimation~1%7BestimationId%7D/parameters/1'
    get:
      operationId: getEstimate
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/estimate'
      security:
        - rivet_auth:
            - read
      summary: Get estimate result
      tags:
        - Estimates
  '/accounts/{accountId}/insurancePlans':
    parameters:
      - $ref: '#/components/parameters/accountId'
    get:
      summary: List insurance plans
      tags:
        - Insurance
      operationId: listInsurancePlans
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/insurancePlan'
  '/accounts/{accountId}/patients': {}
  '/accounts/{accountId}/patients/{patientId}': {}
  '/accounts/{accountId}/patients/{patientId}/cob': {}
  '/accounts/{accountId}/insurance-plans': {}
  '/accounts/{accountId}/insurance-plans/{insurancePlanId}': {}
  '/accounts/{accountId}/insurance-policies': {}
  '/accounts/{accountId}/insurance-policies/{insuranceId}': {}
  '/accounts/{accountId}/providers/{providerId}':
    parameters:
      - $ref: '#/components/parameters/accountId'
      - name: providerId
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: getProvider
      summary: Get provider
      tags:
        - Providers
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/provider'
    put:
      operationId: updateProvider
      summary: Update provider
      tags:
        - Providers
      responses:
        '204':
          description: Updated.
  '/accounts/{accountId}/service-locations':
    parameters:
      - $ref: '#/components/parameters/accountId'
    get:
      operationId: list-service-locations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceLocationItem'
          description: Success.
      summary: List service locations
      tags:
        - Practice
    post:
      operationId: create-service-location
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceLocation'
          description: Success.
      summary: Create service location
      tags:
        - Practice
  '/accounts/{accountId}/service-locations/{serviceLocationId}':
    get:
      operationId: get-service-location
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/serviceLocation'
          description: Success.
      summary: Get service location
      tags:
        - Practice
    put:
      operationId: update-service-location
      responses:
        '204':
          description: Success.
      summary: Update service location
      tags:
        - Practice
  /auth:
    get:
      description: Test authentication.
      operatorId: auth
      summary: Authentication
      tags:
        - Other
      responses:
        '200':
          description: Success.
tags:
  - name: Estimates
    description: Patient estimates.
  - name: Insurance
    description: Insurance payers and policies.
  - name: Patients
    description: Patients.
  - name: Providers
    description: Providers.
  - name: Practice
    description: Practice configuration.
  - name: Other

